memberSearchIndex = [{"p":"io.github.neonorbit.dexplore.exception","c":"AbortException","l":"AbortException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"accept(ReferencePool)","url":"accept(io.github.neonorbit.dexplore.ReferencePool)"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler.Receiver","l":"accept(V)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addAll()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Builder","l":"addClassQuery(String, DexFilter, ClassFilter)","url":"addClassQuery(java.lang.String,io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addField()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addFieldWithDetails()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addMethod()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Builder","l":"addMethodQuery(String, DexFilter, ClassFilter, MethodFilter)","url":"addMethodQuery(java.lang.String,io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.filter.MethodFilter)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addMethodWithDetails()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addString()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"addTypeDes()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"ALL"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"ALL_TYPES"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"all()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"allowPreferredDexOnly(boolean)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"and(ReferenceFilter)","url":"and(io.github.neonorbit.dexplore.filter.ReferenceFilter)"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"awaitCompletion()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"awaitCompletion(long, TaskHandler.Listener)","url":"awaitCompletion(long,io.github.neonorbit.dexplore.task.TaskHandler.Listener)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Builder","l":"build()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"build()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"build()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"build()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"build()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"build(FieldReference, boolean)","url":"build(org.jf.dexlib2.iface.reference.FieldReference,boolean)"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"build(MethodReference, boolean)","url":"build(org.jf.dexlib2.iface.reference.MethodReference,boolean)"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"build(String)","url":"build(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"build(StringReference)","url":"build(org.jf.dexlib2.iface.reference.StringReference)"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"build(TypeReference)","url":"build(org.jf.dexlib2.iface.reference.TypeReference)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch","l":"builder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter","l":"builder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"builder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"builder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"builder()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"checkNotNull(Object...)","url":"checkNotNull(java.lang.Object...)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.ClassQuery","l":"classFilter"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"clazz"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"clazz"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"clazz"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"compare(T[], T[])","url":"compare(T[],T[])"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"compareTo(ClassData)","url":"compareTo(io.github.neonorbit.dexplore.result.ClassData)"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"compareTo(DexEntry)","url":"compareTo(io.github.neonorbit.dexplore.DexEntry)"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"compareTo(FieldData)","url":"compareTo(io.github.neonorbit.dexplore.result.FieldData)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"compareTo(MethodData)","url":"compareTo(io.github.neonorbit.dexplore.result.MethodData)"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"DexRefData","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"containsAll(String...)","url":"containsAll(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"containsAnnotations(String...)","url":"containsAnnotations(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"containsAnnotations(String...)","url":"containsAnnotations(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"containsAnnotationValues(String...)","url":"containsAnnotationValues(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"containsAnnotationValues(String...)","url":"containsAnnotationValues(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"containsAny(String...)","url":"containsAny(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"d(String)","url":"d(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLogger","l":"debug(String)","url":"debug(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decode(DexBackedClassDef, ReferenceTypes)","url":"decode(org.jf.dexlib2.dexbacked.DexBackedClassDef,io.github.neonorbit.dexplore.filter.ReferenceTypes)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decode(DexBackedMethod, ReferenceTypes)","url":"decode(org.jf.dexlib2.dexbacked.DexBackedMethod,io.github.neonorbit.dexplore.filter.ReferenceTypes)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decode(DexEntry, ReferenceTypes)","url":"decode(io.github.neonorbit.dexplore.DexEntry,io.github.neonorbit.dexplore.filter.ReferenceTypes)"},{"p":"io.github.neonorbit.dexplore","c":"LazyDecoder","l":"decode(T, ReferenceTypes)","url":"decode(T,io.github.neonorbit.dexplore.filter.ReferenceTypes)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeFully(DexBackedClassDef)","url":"decodeFully(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeFully(DexBackedDexFile)","url":"decodeFully(org.jf.dexlib2.dexbacked.DexBackedDexFile)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeFully(DexBackedField)","url":"decodeFully(org.jf.dexlib2.dexbacked.DexBackedField)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeFully(DexBackedMethod)","url":"decodeFully(org.jf.dexlib2.dexbacked.DexBackedMethod)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeNumberLiterals(DexBackedClassDef)","url":"decodeNumberLiterals(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore","c":"DexDecoder","l":"decodeNumberLiterals(DexBackedMethod)","url":"decodeNumberLiterals(org.jf.dexlib2.dexbacked.DexBackedMethod)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"defaultSuperClass()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"deserialize(String)","url":"deserialize(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"deserialize(String)","url":"deserialize(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"deserialize(String)","url":"deserialize(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexClasses(DexBackedDexFile)","url":"dexClasses(org.jf.dexlib2.dexbacked.DexBackedDexFile)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexClassToJavaTypeName(DexBackedClassDef)","url":"dexClassToJavaTypeName(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexClassToJavaTypeNames(Collection<DexBackedClassDef>)","url":"dexClassToJavaTypeNames(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexDirectMethods(DexBackedClassDef)","url":"dexDirectMethods(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.exception","c":"DexException","l":"DexException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.github.neonorbit.dexplore.exception","c":"DexException","l":"DexException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.exception","c":"DexException","l":"DexException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.github.neonorbit.dexplore","c":"DexFactory","l":"DexFactory()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexFields(DexBackedClassDef)","url":"dexFields(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Query","l":"dexFilter"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexInstanceFields(DexBackedClassDef)","url":"dexInstanceFields(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLogger","l":"DexLogger()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexMethods(DexBackedClassDef)","url":"dexMethods(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore","c":"DexOptions","l":"DexOptions()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexStaticFields(DexBackedClassDef)","url":"dexStaticFields(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexToJavaTypeName(Collection<String>)","url":"dexToJavaTypeName(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexToJavaTypeName(String)","url":"dexToJavaTypeName(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"DexUtils()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"dexVirtualMethods(DexBackedClassDef)","url":"dexVirtualMethods(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"DIRECT"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"disable()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"dispatch(Callable<V>)","url":"dispatch(java.util.concurrent.Callable)"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"emptyPool()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"enable()"},{"p":"io.github.neonorbit.dexplore","c":"DexOptions","l":"enableCache"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Query","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"field"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"fieldsContain(String)","url":"fieldsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"fieldsContain(String)","url":"fieldsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"fieldSignaturesContain(String)","url":"fieldSignaturesContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.exception","c":"FileNotFoundException","l":"FileNotFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"FilteredIterable","l":"FilteredIterable(Iterator<T>, Predicate<T>)","url":"%3Cinit%3E(java.util.Iterator,java.util.function.Predicate)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findClass(ClassFilter)","url":"findClass(io.github.neonorbit.dexplore.filter.ClassFilter)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findClass(DexFilter, ClassFilter)","url":"findClass(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findClasses(DexFilter, ClassFilter, int)","url":"findClasses(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,int)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"findFirst(Collection<T>)","url":"findFirst(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findMethod(ClassFilter, MethodFilter)","url":"findMethod(io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.filter.MethodFilter)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findMethod(DexFilter, ClassFilter, MethodFilter)","url":"findMethod(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.filter.MethodFilter)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"findMethods(DexFilter, ClassFilter, MethodFilter, int)","url":"findMethods(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.filter.MethodFilter,int)"},{"p":"io.github.neonorbit.dexplore","c":"DexOpcodes","l":"forApi(int)"},{"p":"io.github.neonorbit.dexplore","c":"DexOpcodes","l":"forArtVersion(int)"},{"p":"io.github.neonorbit.dexplore","c":"DexOpcodes","l":"forDexVersion(int)"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"forEachResult(TaskHandler.Receiver<V>)","url":"forEachResult(io.github.neonorbit.dexplore.task.TaskHandler.Receiver)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"getClassData()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getClazz()"},{"p":"io.github.neonorbit.dexplore.result","c":"DexItemData","l":"getClazz()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"getClazz()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"getClazz()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getConstructors()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"getConstructorSection()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"getDeclaringClass()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"getDeclaringClass()"},{"p":"io.github.neonorbit.dexplore","c":"DexOpcodes","l":"getDefault()"},{"p":"io.github.neonorbit.dexplore","c":"DexOptions","l":"getDefault()"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"getDexFile()"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"getDexName()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getFields()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"getFieldSection()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"getFieldSignature(DexBackedField)","url":"getFieldSignature(org.jf.dexlib2.dexbacked.DexBackedField)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"getFieldSignature(String, String, String)","url":"getFieldSignature(java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"getJavaParams(DexBackedMethod)","url":"getJavaParams(org.jf.dexlib2.dexbacked.DexBackedMethod)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch","l":"getKeys()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getMethods()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"getMethodSection()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"getMethodSignature(DexBackedMethod)","url":"getMethodSignature(org.jf.dexlib2.dexbacked.DexBackedMethod)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"getMethodSignature(String, String, Iterable<? extends CharSequence>, String)","url":"getMethodSignature(java.lang.String,java.lang.String,java.lang.Iterable,java.lang.String)"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"getName()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"getName()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"getParameterTypes()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getReferencePool()"},{"p":"io.github.neonorbit.dexplore.result","c":"DexItemData","l":"getReferencePool()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"getReferencePool()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"getReferencePool()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"getReturnType()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"getScope()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.result","c":"DexItemData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"getSignature()"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"getString()"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"getStringSection()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"getThis()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"getThis()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"getThis()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"getType()"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"getType()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"getTypeSection()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasAll()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasField()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasFieldDetails()"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Query","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"hashCode()"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"hasItem(Collection<?>)","url":"hasItem(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasMethod()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasMethodDetails()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasNone()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasString()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"hasTask()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"hasTypeDes()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"isConstructor()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"isConstructor()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"isDefault()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"isDefault()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"isDefault()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"isDirty()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"isEmpty()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch","l":"isParallel()"},{"p":"io.github.neonorbit.dexplore.exception","c":"AbortException","l":"isSilent()"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"isSingle(Collection<?>)","url":"isSingle(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"isValidName(List<String>)","url":"isValidName(java.util.List)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"isValidName(String)","url":"isValidName(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"FilteredIterable","l":"iterator()"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"javaClassToDexTypeName(Class<?>)","url":"javaClassToDexTypeName(java.lang.Class)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"javaClassToDexTypeName(Collection<Class<?>>)","url":"javaClassToDexTypeName(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"javaToDexTypeName(Collection<String>)","url":"javaToDexTypeName(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexUtils","l":"javaToDexTypeName(String)","url":"javaToDexTypeName(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Query","l":"key"},{"p":"io.github.neonorbit.dexplore","c":"DexFactory","l":"load(byte[], DexOptions)","url":"load(byte[],io.github.neonorbit.dexplore.DexOptions)"},{"p":"io.github.neonorbit.dexplore","c":"DexFactory","l":"load(byte[])"},{"p":"io.github.neonorbit.dexplore","c":"DexFactory","l":"load(String, DexOptions)","url":"load(java.lang.String,io.github.neonorbit.dexplore.DexOptions)"},{"p":"io.github.neonorbit.dexplore","c":"DexFactory","l":"load(String)","url":"load(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"loadClass(ClassLoader, String)","url":"loadClass(java.lang.ClassLoader,java.lang.String)"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"loadClass(ClassLoader)","url":"loadClass(java.lang.ClassLoader)"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"loadField(ClassLoader)","url":"loadField(java.lang.ClassLoader)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"loadMethod(ClassLoader)","url":"loadMethod(java.lang.ClassLoader)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter","l":"MATCH_ALL"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"MATCH_ALL"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"MATCH_ALL"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"method"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.MethodQuery","l":"methodFilter"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"methodsContain(String)","url":"methodsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"methodsContain(String)","url":"methodsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"methodSignaturesContain(String)","url":"methodSignaturesContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.task","c":"QueryTaskFactory","l":"newTask(QueryBatch.Query)","url":"newTask(io.github.neonorbit.dexplore.QueryBatch.Query)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"noInterfaces()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"NONE"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"none()"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"nonNullList(T[])"},{"p":"io.github.neonorbit.dexplore.result","c":"Results","l":"ofClass(DexBackedClassDef)","url":"ofClass(org.jf.dexlib2.dexbacked.DexBackedClassDef)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter","l":"ofClass(String)","url":"ofClass(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"ofDefinedClass(String)","url":"ofDefinedClass(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.result","c":"Results","l":"ofMethod(DexBackedMethod, ClassData)","url":"ofMethod(org.jf.dexlib2.dexbacked.DexBackedMethod,io.github.neonorbit.dexplore.result.ClassData)"},{"p":"io.github.neonorbit.dexplore.result","c":"Results","l":"ofMethod(DexBackedMethod)","url":"ofMethod(org.jf.dexlib2.dexbacked.DexBackedMethod)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"ofMethod(String, List<String>)","url":"ofMethod(java.lang.String,java.util.List)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"ofMethod(String)","url":"ofMethod(java.lang.String)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"onClassResult(DexFilter, ClassFilter, Operator<ClassData>)","url":"onClassResult(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.iface.Operator)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"onMethodResult(DexFilter, ClassFilter, MethodFilter, Operator<MethodData>)","url":"onMethodResult(io.github.neonorbit.dexplore.filter.DexFilter,io.github.neonorbit.dexplore.filter.ClassFilter,io.github.neonorbit.dexplore.filter.MethodFilter,io.github.neonorbit.dexplore.iface.Operator)"},{"p":"io.github.neonorbit.dexplore","c":"Dexplore","l":"onQueryResult(QueryBatch, KOperator<DexItemData>)","url":"onQueryResult(io.github.neonorbit.dexplore.QueryBatch,io.github.neonorbit.dexplore.iface.KOperator)"},{"p":"io.github.neonorbit.dexplore","c":"DexOptions","l":"opcodes"},{"p":"io.github.neonorbit.dexplore.iface","c":"KOperator","l":"operate(String, T)","url":"operate(java.lang.String,T)"},{"p":"io.github.neonorbit.dexplore.iface","c":"Operator","l":"operate(T)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"optimizedList(Collection<T>)","url":"optimizedList(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"optimizedSet(Collection<T>)","url":"optimizedSet(java.util.Collection)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"or(ReferenceFilter)","url":"or(io.github.neonorbit.dexplore.filter.ReferenceFilter)"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"params"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"pause()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"preferredList()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler.Listener","l":"progress(int, int)","url":"progress(int,int)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Query","l":"Query(String, DexFilter)","url":"%3Cinit%3E(java.lang.String,io.github.neonorbit.dexplore.filter.DexFilter)"},{"p":"io.github.neonorbit.dexplore.task","c":"QueryTaskFactory","l":"QueryTaskFactory(Dexplore, KOperator<DexItemData>)","url":"%3Cinit%3E(io.github.neonorbit.dexplore.Dexplore,io.github.neonorbit.dexplore.iface.KOperator)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"resetLogger()"},{"p":"io.github.neonorbit.dexplore.result","c":"Results","l":"Results()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"resume()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"retrieve()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"returnType"},{"p":"io.github.neonorbit.dexplore","c":"DexOptions","l":"rootDexOnly"},{"p":"io.github.neonorbit.dexplore.task","c":"QueryTask","l":"run()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"serialize()"},{"p":"io.github.neonorbit.dexplore.result","c":"DexItemData","l":"serialize()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"serialize()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"serialize()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setClasses(String...)","url":"setClasses(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setClassSimpleNames(String...)","url":"setClassSimpleNames(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"setDefinedClasses(String...)","url":"setDefinedClasses(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setInterfaces(List<String>)","url":"setInterfaces(java.util.List)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"setLogger(DexLogger)","url":"setLogger(io.github.neonorbit.dexplore.util.DexLogger)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setMethodNames(String...)","url":"setMethodNames(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setModifiers(int)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setModifiers(int)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setNumbers(Number...)","url":"setNumbers(java.lang.Number...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setNumbers(Number...)","url":"setNumbers(java.lang.Number...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setPackages(String...)","url":"setPackages(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch.Builder","l":"setParallel(boolean)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setParamList(List<String>)","url":"setParamList(java.util.List)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setParamSize(int)"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"setPreferredDexNames(String...)","url":"setPreferredDexNames(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"setReturnType(String)","url":"setReturnType(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Builder","l":"setScope(ReferenceTypes.Scope)","url":"setScope(io.github.neonorbit.dexplore.filter.ReferenceTypes.Scope)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setSourceNames(String...)","url":"setSourceNames(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter.Builder","l":"setStoredSources(String...)","url":"setStoredSources(java.lang.String...)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"setSuperClass(String)","url":"setSuperClass(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.exception","c":"AbortException","l":"silently()"},{"p":"io.github.neonorbit.dexplore","c":"QueryBatch","l":"size()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"skipModifiers(int)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter.Builder","l":"skipModifiers(int)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter.Builder","l":"skipPackages(List<String>, List<String>)","url":"skipPackages(java.util.List,java.util.List)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"STRINGS_ONLY"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"stringsContain(String)","url":"stringsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"stringsContain(String)","url":"stringsContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"TaskHandler()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.task","c":"TaskHandler","l":"TaskHandler(int, boolean)","url":"%3Cinit%3E(int,boolean)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter","l":"toBuilder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"toBuilder()"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"toBuilder()"},{"p":"io.github.neonorbit.dexplore","c":"DexEntry","l":"toString()"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"toString()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes","l":"toString()"},{"p":"io.github.neonorbit.dexplore.reference","c":"FieldRefData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.reference","c":"MethodRefData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.reference","c":"StringRefData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.reference","c":"TypeRefData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.result","c":"ClassData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.result","c":"MethodData","l":"toString()"},{"p":"io.github.neonorbit.dexplore.result","c":"FieldData","l":"type"},{"p":"io.github.neonorbit.dexplore","c":"ReferencePool","l":"typesContain(String)","url":"typesContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceFilter","l":"typesContain(String)","url":"typesContain(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.exception","c":"UnsupportedFileException","l":"UnsupportedFileException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"Utils","l":"Utils()","url":"%3Cinit%3E()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"values()"},{"p":"io.github.neonorbit.dexplore.filter","c":"ClassFilter","l":"verify(DexBackedClassDef, LazyDecoder<DexBackedClassDef>)","url":"verify(org.jf.dexlib2.dexbacked.DexBackedClassDef,io.github.neonorbit.dexplore.LazyDecoder)"},{"p":"io.github.neonorbit.dexplore.filter","c":"MethodFilter","l":"verify(DexBackedMethod, LazyDecoder<DexBackedMethod>)","url":"verify(org.jf.dexlib2.dexbacked.DexBackedMethod,io.github.neonorbit.dexplore.LazyDecoder)"},{"p":"io.github.neonorbit.dexplore.filter","c":"DexFilter","l":"verify(DexEntry, LazyDecoder<DexEntry>)","url":"verify(io.github.neonorbit.dexplore.DexEntry,io.github.neonorbit.dexplore.LazyDecoder)"},{"p":"io.github.neonorbit.dexplore.filter","c":"ReferenceTypes.Scope","l":"VIRTUAL"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLog","l":"w(String)","url":"w(java.lang.String)"},{"p":"io.github.neonorbit.dexplore.util","c":"DexLogger","l":"warn(String)","url":"warn(java.lang.String)"}]